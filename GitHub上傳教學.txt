========================================
📤 如何上傳到 GitHub
========================================

方法一：使用 GitHub Desktop（最簡單，推薦新手）
========================================

步驟 1：安裝 GitHub Desktop
--------------------------
• 下載：https://desktop.github.com/
• 安裝並登入你的 GitHub 帳號

步驟 2：建立新的 Repository
---------------------------
1. 開啟 GitHub Desktop
2. 點擊「File」→「New Repository」
3. 填寫資訊：
   • Name: youtube-shorts-searcher
   • Description: YouTube 短影片搜尋工具
   • Local Path: 選擇 d:\PY\youtube\distribution
   • ✅ 勾選「Initialize this repository with a README」
   • ✅ 選擇 Git Ignore: Python
   • 選擇 License: MIT License（或其他）
4. 點擊「Create Repository」

步驟 3：發布到 GitHub
---------------------
1. 點擊「Publish repository」
2. 選擇：
   • ❌ 不勾選「Keep this code private」（公開）
   • 或 ✅ 勾選（私人儲存庫）
3. 點擊「Publish Repository」

✅ 完成！你的專案已經上傳到 GitHub


方法二：使用命令列（Git）
========================================

步驟 1：安裝 Git
---------------
• 下載：https://git-scm.com/downloads
• 安裝時選擇預設選項

步驟 2：在 GitHub 網站建立 Repository
------------------------------------
1. 登入 https://github.com
2. 點擊右上角「+」→「New repository」
3. 填寫：
   • Repository name: youtube-shorts-searcher
   • Description: YouTube 短影片搜尋工具
   • ✅ Public（公開）或 Private（私人）
   • ❌ 不要勾選「Initialize this repository with a README」
4. 點擊「Create repository」

步驟 3：使用命令列上傳
---------------------
開啟 PowerShell，執行以下命令：

# 進入 distribution 資料夾
cd d:\PY\youtube\distribution

# 初始化 Git
git init

# 添加所有檔案
git add .

# 提交
git commit -m "Initial commit: YouTube Shorts Searcher v1.0"

# 連接到 GitHub（替換成你的 GitHub 使用者名稱）
git remote add origin https://github.com/你的使用者名稱/youtube-shorts-searcher.git

# 設定主分支
git branch -M main

# 推送到 GitHub
git push -u origin main

首次推送時會要求輸入 GitHub 帳號密碼或使用 Personal Access Token


方法三：直接上傳檔案（最快但功能少）
========================================

步驟 1：建立 Repository
-----------------------
同方法二的步驟 2

步驟 2：上傳檔案
---------------
1. 進入你的 Repository 頁面
2. 點擊「uploading an existing file」
3. 將 distribution 資料夾內的所有檔案拖曳到網頁
4. 填寫 Commit message: "Initial commit"
5. 點擊「Commit changes」

⚠️ 注意：這個方法無法上傳資料夾結構，需要手動建立 templates 資料夾


========================================
⚠️ 上傳前檢查清單
========================================

務必確認：
□ ❌ 沒有 .env 檔案（真實 API Key）
□ ❌ 沒有 .venv 資料夾
□ ❌ 沒有 __pycache__ 資料夾
□ ✅ 有 .gitignore 檔案
□ ✅ 有 .env.example 檔案
□ ✅ 有 README.md 檔案

執行檢查命令：
cd d:\PY\youtube\distribution
ls -Force  # 查看所有檔案（包含隱藏檔案）


========================================
📝 建議的 Repository 設定
========================================

Repository 名稱建議：
• youtube-shorts-searcher
• youtube-shorts-search-tool
• yt-shorts-finder

Description 建議：
• YouTube 短影片搜尋工具 - 支援多條件篩選、即時配額監控、CSV 匯出
• A YouTube Shorts search tool with filters, quota monitoring, and CSV export

Topics（標籤）建議：
• youtube-api
• youtube-shorts
• flask
• python
• web-scraping
• youtube-search


========================================
🎯 上傳後的使用方式
========================================

其他人可以這樣使用你的專案：

方法 1：下載 ZIP
----------------
1. 進入你的 GitHub Repository
2. 點擊綠色「Code」按鈕
3. 選擇「Download ZIP」
4. 解壓縮後按照 README.md 說明使用

方法 2：使用 Git Clone
----------------------
git clone https://github.com/你的使用者名稱/youtube-shorts-searcher.git
cd youtube-shorts-searcher
# 按照 README.md 說明繼續


========================================
🔧 常見問題
========================================

Q1: 上傳時顯示「Permission denied」？
A1: 需要設定 GitHub Personal Access Token
    1. GitHub → Settings → Developer settings
    2. Personal access tokens → Generate new token
    3. 勾選 repo 權限
    4. 產生後複製 Token
    5. 在 Git 推送時使用 Token 當密碼

Q2: 想要更新 GitHub 上的檔案？
A2: cd d:\PY\youtube\distribution
    git add .
    git commit -m "更新說明"
    git push

Q3: 不小心上傳了 .env 怎麼辦？
A3: 1. 立即刪除檔案並推送
    git rm .env
    git commit -m "Remove API key file"
    git push
    
    2. 到 Google Cloud Console 刪除並重建 API Key
    
    3. 使用 BFG Repo-Cleaner 清除歷史記錄
    （參考：https://rtyley.github.io/bfg-repo-cleaner/）

Q4: 想設定為私人儲存庫？
A4: Repository → Settings → Danger Zone
    → Change repository visibility → Make private


========================================
📚 進階：設定 GitHub Pages（可選）
========================================

如果想讓別人直接在網頁上看說明文件：

1. Repository → Settings → Pages
2. Source: Deploy from a branch
3. Branch: main → / (root)
4. Save

你的 README.md 會顯示在：
https://你的使用者名稱.github.io/youtube-shorts-searcher/


========================================
✨ 完成後的樣子
========================================

GitHub Repository URL：
https://github.com/你的使用者名稱/youtube-shorts-searcher

別人可以：
• 查看程式碼
• 下載使用
• 提出問題（Issues）
• 貢獻改進（Pull Requests）
• Star 你的專案 ⭐


========================================
🎁 額外建議
========================================

1. 添加 License
   • 建議使用 MIT License（最寬鬆）
   • 在 GitHub 建立 Repository 時可以選擇

2. 添加 Badges（徽章）
   在 README.md 頂部加入：
   ![Python](https://img.shields.io/badge/python-3.8+-blue.svg)
   ![Flask](https://img.shields.io/badge/flask-latest-green.svg)
   ![License](https://img.shields.io/badge/license-MIT-blue.svg)

3. 添加 Screenshots
   • 在 README.md 中加入程式畫面截圖
   • 讓別人更容易了解專案

4. 建立 Issues Template
   • 方便使用者回報問題


========================================
